{
  "name": "autoshow",
  "author": "Anthony Campolo",
  "description": "An example workflow for automatically generating customizable show notes for audio and video files.",
  "keywords": [
    "Claude",
    "ChatGPT",
    "Cohere",
    "Mistral",
    "Fireworks",
    "Together",
    "Groq",
    "Whisper",
    "Deepgram",
    "AssemblyAI"
  ],
  "type": "module",
  "scripts": {
    "tsx:base": "tsx --env-file=.env --no-warnings --experimental-sqlite",
    "setup": "bash ./scripts/setup.sh",
    "setup-docker": "docker build --progress=plain -t autoshow -f .github/Dockerfile .",
    "docker-setup": "docker build --progress=plain -t autoshow -f .github/Dockerfile .",
    "setup-all": "npm run setup && npm run docker-setup",
    "as": "npm run tsx:base -- src/commander.ts",
    "video": "npm run as -- --video",
    "urls": "npm run as -- --urls",
    "playlist": "npm run as -- --playlist",
    "file": "npm run as -- --file",
    "rss": "npm run as -- --rss",
    "info": "npm run as -- --info",
    "fastify": "npm run tsx:base -- --watch --experimental-sqlite src/fastify.ts",
    "serve": "npx solid-start dev",
    "clean": "npm run tsx:base scripts/cleanContent.ts",
    "ta": "tsx --test test/all.test.ts",
    "test-all": "tsx --test test/all.test.ts",
    "t": "npm run test-local",
    "test-local": "tsx --test test/local.test.ts",
    "test-docker": "tsx --test test/docker.test.ts",
    "td": "tsx --test test/docker.test.ts",
    "test-services": "tsx --test test/services.test.ts",
    "ts": "npm run tsx:base -- test/fetch-local.ts",
    "test-server-local": "npm run tsx:base -- test/fetch-local.ts",
    "tsa": "npm run tsx:base -- test/fetch-all.ts",
    "test-server-all": "npm run tsx:base -- test/fetch-all.ts",
    "docker-cli": "docker run --rm --env-file .env -v $PWD/content:/usr/src/app/content autoshow",
    "docker-serve": "docker run -d -p 3000:3000 -v $PWD/content:/usr/src/app/content autoshow serve",
    "docker-debug": "docker run --rm -it --entrypoint sh autoshow -c 'ls -lh /usr/src/app && ls -lh /usr/src/app/whisper.cpp/models && ls -lh /usr/src/app/whisper.cpp/build/bin'",
    "ollama-debug": "docker run --rm -it --entrypoint sh autoshow -c 'whoami && ls -l /root && ls -lR /root/.ollama && ls -l /usr/local/bin/ollama'",
    "prune": "docker system prune -af --volumes && docker image prune -af && docker container prune -f && docker volume prune -af",
    "bun": "bun --env-file=.env --no-warnings src/commander.ts",
    "deno": "deno run --allow-sys --allow-read --allow-run --allow-write --allow-env --unstable-sloppy-imports src/commander.ts"
  },
  "dependencies": {
    "@anthropic-ai/sdk": "0.34.0-alpha.0",
    "@deepgram/sdk": "3.9.0",
    "@fastify/cors": "10.0.2",
    "@google/generative-ai": "0.21.0",
    "@mistralai/mistralai": "1.5.0",
    "@solidjs/start": "^1.0.11",
    "assemblyai": "4.9.0",
    "better-sqlite3": "11.8.1",
    "chalk": "5.4.1",
    "cohere-ai": "7.15.4",
    "commander": "13.1.0",
    "fast-xml-parser": "4.5.1",
    "fastify": "5.2.1",
    "file-type": "20.0.0",
    "ollama": "0.5.12",
    "openai": "4.81.0",
    "solid-start-node": "^0.3.11",
    "sqlite-vec": "0.1.7-alpha.2"
  },
  "devDependencies": {
    "@types/node": "22.12.0",
    "tsx": "4.19.2",
    "typedoc": "0.27.6",
    "typedoc-plugin-markdown": "4.4.1",
    "typescript": "5.7.3"
  }
}
