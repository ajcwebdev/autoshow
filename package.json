{
  "name": "autoshow",
  "author": "Anthony Campolo",
  "description": "An example workflow for automatically generating customizable show notes for audio and video files.",
  "keywords": [
    "Claude",
    "ChatGPT",
    "Cohere",
    "Mistral",
    "OctoAI",
    "Whisper",
    "Deepgram",
    "AssemblyAI"
  ],
  "main": "dist/autoshow.js",
  "type": "module",
  "bin": {
    "autoshow": "./dist/autoshow.js"
  },
  "scripts": {
    "setup": "bash ./scripts/setup.sh",
    "setup-python": "bash ./scripts/setup-python.sh",
    "autoshow": "tsx --env-file=.env --no-warnings src/autoshow.ts",
    "as": "tsx --env-file=.env --no-warnings src/autoshow.ts",
    "docker": "docker compose run --remove-orphans --rm autoshow --whisperDocker",
    "docker-up": "docker compose up --build -d --remove-orphans --no-start",
    "ds": "docker compose images && docker compose ls",
    "prune": "docker system prune -af --volumes && docker image prune -af && docker container prune -f && docker volume prune -af",
    "v": "tsx --env-file=.env --no-warnings src/autoshow.ts --whisper large-v2 --video",
    "u": "tsx --env-file=.env --no-warnings src/autoshow.ts --whisper large-v2 --urls",
    "p": "tsx --env-file=.env --no-warnings src/autoshow.ts --whisper large-v2 --playlist",
    "f": "tsx --env-file=.env --no-warnings src/autoshow.ts --whisper large-v2 --file",
    "r": "tsx --env-file=.env --no-warnings src/autoshow.ts --whisper large-v2 --rss",
    "last3": "tsx --env-file=.env --no-warnings src/autoshow.ts --whisper large-v2 --last 3 --rss",
    "serve": "tsx --env-file=.env --no-warnings --watch packages/server/index.ts",
    "fetch-local": "tsx --env-file=.env --no-warnings packages/server/tests/fetch-local.ts",
    "fetch-all": "tsx --env-file=.env --no-warnings packages/server/tests/fetch-all.ts",
    "t": "npm run test-local",
    "test-local": "tsx --test test/local.test.ts",
    "test-docker": "tsx --test test/docker.test.ts",
    "test-integrations": "tsx --test test/integrations.test.ts",
    "clean": "tsx scripts/cleanContent.ts",
    "bun-as": "bun --env-file=.env --no-warnings src/autoshow.ts",
    "deno-as": "deno run --allow-sys --allow-read --allow-run --allow-write --allow-env src/autoshow.ts"
  },
  "dependencies": {
    "@anthropic-ai/sdk": "0.29.0",
    "@deepgram/sdk": "3.8.1",
    "@fastify/cors": "10.0.1",
    "@google/generative-ai": "0.21.0",
    "@mistralai/mistralai": "1.1.0",
    "@octoai/sdk": "1.11.0",
    "assemblyai": "4.7.1",
    "chalk": "5.3.0",
    "cohere-ai": "7.14.0",
    "commander": "12.1.0",
    "fast-xml-parser": "4.5.0",
    "fastify": "5.0.0",
    "file-type": "19.5.0",
    "inquirer": "12.0.0",
    "node-llama-cpp": "3.1.1",
    "ollama": "0.5.9",
    "openai": "4.67.3"
  },
  "devDependencies": {
    "@types/inquirer": "9.0.7",
    "@types/node": "22.7.5",
    "tsx": "4.19.1",
    "typedoc": "^0.26.10",
    "typescript": "5.6.3"
  }
}
