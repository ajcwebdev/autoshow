{
  "name": "autoshow",
  "author": "Anthony Campolo",
  "description": "An example workflow for automatically generating customizable show notes for audio and video files.",
  "keywords": [
    "Ollama",
    "ChatGPT",
    "Claude",
    "Gemini",
    "Deepseek",
    "Fireworks",
    "Together",
    "Whisper.cpp",
    "Deepgram",
    "AssemblyAI"
  ],
  "type": "module",
  "scripts": {
    "tsx:base": "tsx --env-file=.env --no-warnings",
    "setup": "npm run setup-no-docker && npm run setup-docker",
    "clean": "npm run tsx:base src/utils/scripts/clean-content.ts",
    "check": "npx tsc",
    "as": "npm run tsx:base -- src/commander.ts",
    "test-cli-local": "npm run tsx:base -- test/cli/cli-local.test.ts",
    "test-cli-docker": "npm run tsx:base -- test/cli/cli-docker.test.ts",
    "test-cli-services": "npm run tsx:base -- test/cli/cli-services.test.ts",
    "test-cli-all": "npm run tsx:base -- test/cli/cli-all.test.ts",
    "serve": "npm run tsx:base -- --watch src/fastify.ts",
    "test-docker-server-local": "npm run tsx:base -- test/server/docker-server-local.ts",
    "test-docker-server-all": "npm run tsx:base -- test/server/docker-server-all.ts",
    "test-server-local": "npm run tsx:base -- test/server/server-local.ts",
    "test-server-all": "npm run tsx:base -- test/server/server-all.ts",
    "setup-no-docker": "bash ./src/utils/scripts/setup.sh",
    "setup-docker": "docker build --progress=plain -t autoshow -f .github/Dockerfile .",
    "docker-cli": "docker run --rm --env-file .env -v $PWD/content:/usr/src/app/content autoshow",
    "docker-all": "npm run deep-prune && docker build -t custom-pgvector -f .github/postgres-pgvector.Dockerfile . && docker network create autoshow-network || true && docker run -d --name autoshow-postgres --network autoshow-network -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=mypass -e POSTGRES_DB=mydatabase -p 5432:5432 custom-pgvector && docker build --progress=plain -t autoshow -f .github/Dockerfile . && docker run -d --name autoshow-service --network autoshow-network -p 3000:3000 --env-file .env -v $PWD/content:/usr/src/app/content autoshow serve",
    "docker-serve": "docker run -d -p 3000:3000 --env-file .env -v $PWD/content:/usr/src/app/content autoshow serve",
    "prune": "docker system prune -af --volumes && docker image prune -af && docker container prune -f && docker volume prune -af",
    "deep-prune": "docker kill $(docker ps -q) 2>/dev/null || true && docker rm -f $(docker ps -aq) 2>/dev/null || true && docker builder prune -af && docker network prune -f && docker image prune -af && docker volume prune -af && docker system prune -af --volumes",
    "get-db": "psql -h localhost -U myuser -d mydatabase -c 'SELECT id, title, publishDate FROM show_notes ORDER BY id DESC'",
    "drop-db": "psql -h localhost -U ajc -d template1 -c 'DROP DATABASE IF EXISTS mydatabase' && psql -h localhost -U ajc -d template1 -c 'CREATE DATABASE mydatabase WITH OWNER myuser' && psql -h localhost -U ajc -d mydatabase -c 'CREATE EXTENSION IF NOT EXISTS vector'"
  },
  "dependencies": {
    "@anthropic-ai/sdk": "0.36.3",
    "@deepgram/sdk": "3.11.1",
    "@fastify/cors": "10.0.2",
    "@google/generative-ai": "0.21.0",
    "@prisma/client": "^6.3.1",
    "assemblyai": "4.9.0",
    "better-sqlite3": "11.8.1",
    "chalk": "5.4.1",
    "commander": "13.1.0",
    "fast-xml-parser": "4.5.1",
    "fastify": "5.2.1",
    "file-type": "20.1.0",
    "openai": "4.85.0",
    "pg": "^8.13.3",
    "prisma": "^6.3.1",
    "sqlite-vec": "0.1.7-alpha.2"
  },
  "devDependencies": {
    "@types/better-sqlite3": "7.6.12",
    "@types/node": "22.13.2",
    "@types/pg": "^8.11.11",
    "tsx": "4.19.2",
    "typescript": "5.7.3"
  }
}
