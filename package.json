{
  "name": "autoshow",
  "author": "Anthony Campolo",
  "description": "An example workflow for automatically generating customizable show notes for audio and video files.",
  "keywords": [
    "Claude",
    "ChatGPT",
    "Cohere",
    "Mistral",
    "Fireworks",
    "Together",
    "Groq",
    "Whisper",
    "Deepgram",
    "AssemblyAI"
  ],
  "type": "module",
  "scripts": {
    "tsx:base": "tsx --env-file=.env --no-warnings --experimental-sqlite",
    "setup": "bash ./scripts/setup.sh",
    "setup-python": "bash ./scripts/setup-python.sh",
    "setup-docker": "docker compose up --build -d --remove-orphans --no-start",
    "setup-all": "npm run setup && npm run setup-python && npm run setup-docker",
    "as": "npm run tsx:base -- src/cli/commander.ts",
    "video": "npm run as -- --video",
    "urls": "npm run as -- --urls",
    "playlist": "npm run as -- --playlist",
    "file": "npm run as -- --file",
    "rss": "npm run as -- --rss",
    "info": "npm run as -- --info",
    "serve": "npm run tsx:base -- --watch --experimental-sqlite src/server/index.ts",
    "test-server-local": "npm run tsx:base -- src/server/tests/fetch-local.ts",
    "test-server-all": "npm run tsx:base -- src/server/tests/fetch-all.ts",
    "t": "npm run test-local",
    "bench-tiny": "tsx --test test/bench/tiny.test.ts",
    "bench-base": "tsx --test test/bench/base.test.ts",
    "bench-small": "tsx --test test/bench/small.test.ts",
    "bench-medium": "tsx --test test/bench/medium.test.ts",
    "bench-large": "tsx --test test/bench/large.test.ts",
    "bench-turbo": "tsx --test test/bench/turbo.test.ts",
    "test-local": "tsx --test test/local.test.ts",
    "test-docker": "tsx --test test/docker.test.ts",
    "test-services": "tsx --test test/services.test.ts",
    "test-all": "npm run test-local && npm run test-services && npm run test-docker",
    "clean": "tsx scripts/cleanContent.ts",
    "docker": "docker compose run --remove-orphans --rm autoshow --whisperDocker",
    "docker-up": "docker compose up --build -d --remove-orphans --no-start",
    "docker-list": "docker compose images && docker compose ls",
    "prune": "docker system prune -af --volumes && docker image prune -af && docker container prune -f && docker volume prune -af",
    "bun": "bun --env-file=.env --no-warnings src/cli/commander.ts",
    "deno": "deno run --allow-sys --allow-read --allow-run --allow-write --allow-env --unstable-sloppy-imports src/cli/commander.ts"
  },
  "dependencies": {
    "@anthropic-ai/sdk": "0.32.1",
    "@deepgram/sdk": "3.9.0",
    "@fastify/cors": "10.0.1",
    "@google/generative-ai": "0.21.0",
    "@mistralai/mistralai": "1.3.5",
    "assemblyai": "4.8.0",
    "better-sqlite3": "^11.7.0",
    "chalk": "5.3.0",
    "cohere-ai": "7.15.0",
    "commander": "12.1.0",
    "fast-xml-parser": "4.5.0",
    "fastify": "5.2.0",
    "file-type": "19.6.0",
    "inquirer": "12.2.0",
    "js-yaml": "4.1.0",
    "ollama": "0.5.11",
    "openai": "4.76.3",
    "sqlite-vec": "^0.1.6"
  },
  "devDependencies": {
    "@types/inquirer": "9.0.7",
    "@types/js-yaml": "4.0.9",
    "@types/node": "22.10.2",
    "tsx": "4.19.2",
    "typedoc": "0.27.5",
    "typescript": "5.7.2"
  }
}
